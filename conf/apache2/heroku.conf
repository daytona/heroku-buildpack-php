# define a short-hand to our fcgi proxy, for convenience
# Define heroku-fcgi fcgi://127.0.0.1:4999
Define heroku-fcgi unix:/tmp/heroku.fcgi.${PORT}.sock|fcgi://heroku-fcgi

# make sure the proxy is registered with the unix socket; we can then use just "fcgi://heroku-fcgi" in rewrites
# we have to do this because we can't rewrite to a UDS location; Apache will complain that no handler is loaded
# this is also a lot more convenient for users
# http://thread.gmane.org/gmane.comp.apache.devel/52892
<Proxy "${heroku-fcgi}">
    # we must declare a parameter in here or it'll not register the proxy ahead of time
    ProxySet disablereuse=off
</Proxy>

Listen ${PORT}

<VirtualHost *:${PORT}>

    ServerName localhost

    ErrorLog /tmp/heroku.apache2_error.${PORT}.log
    CustomLog /tmp/heroku.apache2_access.${PORT}.log combined

    TraceEnable off

    <Directory ${HEROKU_APP_DIR}>
        # lock it down fully by default
        # if it's also the docroot, it'll be opened up again further below
        Require all denied
        <FilesMatch "^(\.|composer\.|Procfile$)">
            # explicitly deny these again, merged with the docroot later
            Require all denied
        </FilesMatch>
    </Directory>
    # handle these separately; who knows where they are and whether they're accessible
    <Directory ${HEROKU_APP_DIR}/${COMPOSER_VENDOR_DIR}>
        Require all denied
    </Directory>
    <Directory ${HEROKU_APP_DIR}/${COMPOSER_BIN_DIR}>
        Require all denied
    </Directory>

    DocumentRoot ${DOCUMENT_ROOT}

    <Directory ${DOCUMENT_ROOT}>
        Options FollowSymLinks

        # allow .htaccess to do everything
        AllowOverride All

        # no limits
        Require all granted

        # default rewrite to send all .php requests to FastCGI
        # ProxyPass has a boatload of issues with access control, DirectoryIndex et cetera, so we're not using it
        RewriteEngine On
        # make sure our rule gets prepended to any per-dir or .htaccess rule users have defined
        # placing it here into the Directory context means that people can use rewrites in the include (which ends up in the VHost, see the include below) that affect existing files (e.g. to strip an "index.php" in the URL)
        # the alternative, placing it further down outside the Directory, before (or after) the Include, with InheritDown, means this wouldn't be possible
        RewriteOptions InheritDownBefore
        # fcgi://heroku-fcgi shorthand is "declared" by the <Proxy> section above
        # END stops further processing for good (no point in doing anything else; this runs before per-dir rewrites, and it rewrites to a proxy URL, so nothing else would match anyway)
        # do not use the NS flag, or else e.g. DirectoryIndex based hits to index.php won't trigger the rewrite
        # we check if the request filename contains .php, maybe with extra path info
        # split the path info off, so we can check if the PHP file exists by referencing capture group 2
        # then pass the whole thing, capture group 1, to FPM (so PATH_INFO is preserved)
        RewriteCond %{REQUEST_FILENAME} ^(/(.*?\.php)(/.*)?)$
        RewriteCond %2 -f
        RewriteRule . fcgi://heroku-fcgi%1 [P,END]
        # ProxyPassMatch ^/(.*\.php(/.*)?)$ ${heroku-fcgi}${DOCUMENT_ROOT}/$1 # for TCP sockets
        # ProxyPassMatch ^/(.*\.php(/.*)?)$ ${heroku-fcgi}${DOCUMENT_ROOT}
    </Directory>

    # mod_proxy doesn't forward the Authorization header, must fix that ourselves
    SetEnvIfNoCase ^Authorization$ "(.+)" HTTP_AUTHORIZATION=$1

    Include ${HEROKU_PHP_HTTPD_CONFIG_INCLUDE}

</VirtualHost>
